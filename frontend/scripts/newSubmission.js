// code is generated by openAI codex
import { addHeader } from "../components/utils.js";
import { supabase } from "../lib/supabaseClient.js";

addHeader();

const form = document.getElementById("submission-form");
const questId = new URLSearchParams(window.location.search).get("questId");

form?.addEventListener("submit", async (e) => {
  e.preventDefault();

  const userId = window.localStorage.getItem("userId");
  if (!userId) {
    alert("Please sign in to submit.");
    window.location.href = "/pages/login.html";
    return;
  }
  if (!questId) {
    alert("Missing quest id.");
    return;
  }

  const fd = new FormData(form);
  const title = fd.get("title");
  const file = fd.get("image");

  if (!(file instanceof File) || !file?.name) {
    alert("Please choose an image file.");
    return;
  }

  try {
    const fileExt = file.name.split(".").pop();
    const filePath = `submissions/${userId}/${Date.now()}.${fileExt}`;
    const { error: uploadError } = await supabase.storage
      .from("photoQuestImage")
      .upload(filePath, file, { upsert: false, cacheControl: "3600" });
    if (uploadError) throw uploadError;

    const { data: publicUrlData } = supabase.storage
      .from("photoQuestImage")
      .getPublicUrl(filePath);
    const imageUrl = publicUrlData.publicUrl;

    const exif = {
      camera: (fd.get("camera") || "").toString(),
      f: (fd.get("f") || "").toString(),
      iso: Number(fd.get("iso")) || undefined,
      shutter: (fd.get("shutter") || "").toString(),
      focal: Number(fd.get("focal")) || undefined,
    };

    // Clean empty EXIF
    Object.keys(exif).forEach((k) => {
      if (exif[k] === "" || exif[k] === undefined || Number.isNaN(exif[k])) {
        delete exif[k];
      }
    });

    const payload = {
      challengeId: questId,
      userId,
      title,
      imageUrl,
      counters: { likes: 0 },
      exif: Object.keys(exif).length ? exif : undefined,
    };

    const resp = await fetch(`/submissions/`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(payload),
    });
    const result = await resp.json();
    if (result?.result?.insertedId || result?.result?.acknowledged) {
      // Navigate back to quest page
      window.location.href = `/pages/quest.html?id=${questId}`;
    } else {
      alert("Failed to create submission. Try again.");
      console.error("submission create error", result);
    }
  } catch (err) {
    console.error("upload/submit error", err);
    alert("There was an error uploading your photo.");
  }
});
